{"ast":null,"code":"var _jsxFileName = \"/Users/cdot/Desktop/React/neomorphic-ui/src/components/MemeGenerator/index.js\";\nimport React, { Component } from \"react\";\nimport { NeuButton, NeuInput } from \"neumorphic-ui\";\n\nclass MemeGenerator extends Component {\n  constructor() {\n    super();\n    this.state = {\n      topText: \"\",\n      bottomText: \"\",\n      randomImg: \"http://i.imgflip.com/1bij.jpg\",\n      allMemeImgs: []\n    }; //empty state\n\n    this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    fetch(\"https://api.imgflip.com/get_memes\").then(response => response.json()).then(response => {\n      const {\n        memes\n      } = response.data;\n      console.log(memes[0]);\n      this.setState({\n        allMemeImgs: memes\n      });\n    });\n    console.log(this.state.allMemeImgs);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const randNum = Math.floor(Math.random() * this.state.allMemeImgs.length);\n    const randMemeImg = this.state.allMemeImgs[randNum].url;\n    this.setState({\n      randomImg: randMemeImg\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: \"meme-form\",\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(NeuInput, {\n      width: \"50%\",\n      onChange: e => this.setState({\n        topText: e.target.value\n      }),\n      placeholder: \"Top Text\",\n      value: this.state.topText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(NeuInput, {\n      width: \"50%\",\n      onChange: e => this.setState({\n        bottomText: e.target.value\n      }),\n      placeholder: \"Bottom Text\",\n      value: this.state.bottomText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(NeuButton, {\n      text: \"Gen\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"meme\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: this.state.randomImg,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    }, this.state.topText), /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"bottom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }\n    }, this.state.bottomText)));\n  }\n\n}\n\nexport default MemeGenerator;","map":{"version":3,"sources":["/Users/cdot/Desktop/React/neomorphic-ui/src/components/MemeGenerator/index.js"],"names":["React","Component","NeuButton","NeuInput","MemeGenerator","constructor","state","topText","bottomText","randomImg","allMemeImgs","handleSubmit","bind","componentDidMount","fetch","then","response","json","memes","data","console","log","setState","event","preventDefault","randNum","Math","floor","random","length","randMemeImg","url","render","e","target","value"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport { NeuButton, NeuInput } from \"neumorphic-ui\";\n\nclass MemeGenerator extends Component {\n  constructor() {\n    super();\n    this.state = {\n      topText: \"\",\n      bottomText: \"\",\n      randomImg: \"http://i.imgflip.com/1bij.jpg\",\n      allMemeImgs: []\n    }; //empty state\n\n    this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    fetch(\"https://api.imgflip.com/get_memes\")\n      .then(response => response.json())\n      .then(response => {\n        const { memes } = response.data;\n        console.log(memes[0]);\n        this.setState({ allMemeImgs: memes });\n      });\n\n    console.log(this.state.allMemeImgs);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const randNum = Math.floor(Math.random() * this.state.allMemeImgs.length);\n    const randMemeImg = this.state.allMemeImgs[randNum].url;\n    this.setState({ randomImg: randMemeImg });\n  }\n\n  render() {\n    return (\n      <div>\n        <form className=\"meme-form\" onSubmit={this.handleSubmit}>\n          <NeuInput\n            width=\"50%\"\n            onChange={e => this.setState({ topText: e.target.value })}\n            placeholder=\"Top Text\"\n            value={this.state.topText}\n          />\n          <NeuInput\n            width=\"50%\"\n            onChange={e => this.setState({ bottomText: e.target.value })}\n            placeholder=\"Bottom Text\"\n            value={this.state.bottomText}\n          />\n          <NeuButton text=\"Gen\" />\n        </form>\n\n        <div className=\"meme\">\n          <img src={this.state.randomImg} alt=\"\" />\n          <h2 className=\"top\">{this.state.topText}</h2>\n          <h2 className=\"bottom\">{this.state.bottomText}</h2>\n        </div>\n      </div>\n    );\n  }\n}\nexport default MemeGenerator;\n"]},"metadata":{},"sourceType":"module"}